apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "cdp-spark-provisioner.name" . }}
{{- include "cdp-spark-provisioner.labels" . | nindent 4 }}
  name: {{ template "cdp-spark-provisioner.fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "cdp-spark-provisioner.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "cdp-spark-provisioner.name" . }}
        actorSystemName: {{ template "cdp-spark-provisioner.name" . }}
    spec:
      {{- if .Values.existingServiceAccount }}
      serviceAccountName: {{ .Values.existingServiceAccount }}
      {{- else if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "cdp-spark-provisioner.name" . }}-service-account
      {{- else }}
        {{- fail "Service account not specified. It is mandatory" }}
      {{- end }}
      automountServiceAccountToken: false
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end}}
      volumes:
        - name: config
          configMap:
            name: {{ template "cdp-spark-provisioner.fullname" . }}-config
            defaultMode: 420
        - name: keytab-volume
          secret:
            secretName: witboost-addons-secrets
            items:
              - key: cdp-private-spark-keytab
                path: cdp/private/spark/keytab
        {{- if .Values.customRootCA.enabled }}
        - name: custom-ca-volume
          secret:
            secretName: witboost-addons-secrets
            items:
              - key: cdp-private-spark-custom-ca
                path: custom_root_ca.crt
        - name: shared-volume
          emptyDir: {}
        {{- end }}
      
      initContainers:
        {{- if .Values.customRootCA.enabled }}
        # Init container used to prepare the custom root ca
        - name: {{ .Chart.Name }}-init-ca
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          command: ['sh', '-c']
          args:
            - |
              cat /certificates/custom_root_ca.crt | base64 -d > /work/custom_root_ca_decoded.crt
              cp $JAVA_HOME/lib/security/cacerts /work/cacerts
              chmod 644 /work/cacerts
              keytool -import -noprompt -alias customRootCA -keystore /work/cacerts -file /work/custom_root_ca_decoded.crt -storepass changeit
          volumeMounts:
            - name: custom-ca-volume
              mountPath: /certificates
              readOnly: true
            - name: shared-volume
              mountPath: /work
        {{- end }}
        # Init container used to prepare the keytab
        - name: {{ .Chart.Name }}-init-kerberos
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          command: ['sh', '-c']
          args:
            - |
              cat etc/security/cdp/private/spark/keytab | base64 -d > /work/keytab
          volumeMounts:
            - name: keytab-volume
              mountPath: /opt/docker/etc/security
              readOnly: true
            - name: shared-volume
              mountPath: /work
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          command: ["bin/spark-workloads-provisioner"]
          args: 
          - "-Dconfig.file=etc/configs/application.conf"
          - "-Dlogback.configurationFile=etc/configs/logback.xml"
          - "-Dconfig.override_with_env_vars=true"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8093
              protocol: TCP
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.cdpPrivate.enabled }}
            - name: CLOUDERA_MODE
              value: private
            - name: LIVY_HOST
              value: {{ .Values.cdpPrivate.livy.host }}
            - name: LIVY_URL
              value: {{ .Values.cdpPrivate.livy.url | quote }}
            - name: LIVY_PORT
              value: {{ .Values.cdpPrivate.livy.port | quote }}
            - name: SCHEDULER_PROP
              value: /opt/docker/etc/configs/quartz.properties
            - name: KRB5_CONF_PATH
              value: /opt/docker/etc/configs/krb5.conf
            - name: KRB_JAAS_CONF_PATH
              value: /opt/docker/etc/configs/jaas.conf
            - name: CDP_PRIVATE_REALM
              value: {{ .Values.cdpPrivate.kerberos.realm }}
            {{- else }}
            - name: CDP_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: CDP_ACCESS_KEY_ID
            - name: CDP_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: CDP_PRIVATE_KEY
            - name: CDP_DEPLOY_ROLE_USER
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: CDP_DEPLOY_ROLE_USER
            - name: CDP_DEPLOY_ROLE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: CDP_DEPLOY_ROLE_PASSWORD
            {{- end}}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /opt/docker/etc/configs
            - name: shared-volume
              mountPath: /opt/docker/etc/security/keytab
              subPath: keytab
              readOnly: true
            {{- if .Values.customRootCA.enabled }}
            - name: shared-volume
              mountPath: /usr/local/openjdk-11/lib/security/cacerts
              subPath: cacerts
              readOnly: true
            {{- end }}
